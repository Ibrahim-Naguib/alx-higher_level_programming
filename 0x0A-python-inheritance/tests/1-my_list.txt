The ``1-my_list`` module
============================

Using ``my_list``
---------------------

Import the class:

    >>> MyList = __import__('1-my_list').MyList

======================
Test normal case:

	>>> my_list = MyList([3, 4, 1, 5, 7, 2])
	>>> my_list.print_sorted()
	[1, 2, 3, 4, 5, 7]

======================
Test empty list:

	>>> my_list = MyList([])
	>>> my_list.print_sorted()
	[]

======================
Test negative list:

	>>> my_list = MyList([-3, -4, -1, -5, -7, -2])
	>>> my_list.print_sorted()
	[-7, -5, -4, -3, -2, -1]

======================
Test append to list:

	>>> my_list = MyList()
	>>> my_list.append(5)
	>>> my_list
	[5]

======================
Test dup numbers:

	>>> my_list = MyList([4, 2, 6, 2, 3, 4])
	>>> my_list.print_sorted()
	[2, 2, 3, 4, 4, 6]

======================
Test without using class:

	>>> my_list = [1, 2, 3]
	>>> my_list.print_sorted()
	Traceback (most recent call last):
  	 File "<stdin>", line 1, in <module>
	AttributeError: 'list' object has no attribute 'print_sorted'
	
======================
Test class Type:

	>>> my_list = MyList()
	>>> type(my_list) == MyList
	True

======================
Test Isinstance:

	>>> my_list = MyList()
	>>> isinstance(my_list, list)
	True
